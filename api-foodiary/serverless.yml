# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: joaosodre
# "service" is the name of this project. This will also be added to your AWS resource names.
service: api-foodiary

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs22.x
  region: sa-east-1
  architecture: arm64
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    JWT_SECRET: ${env:JWT_SECRET}
    BUCKET_NAME: !Ref UploadsBucket
    MEALS_QUEUE_URL: !Ref MealsQueue
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource: !Sub '${UploadsBucket.Arn}/*'
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: !GetAtt MealsQueue.Arn

package:
  individually: true

build:
  esbuild:
    minify: true
    sourcemap: false

functions:
  signin:
    handler: src/functions/signin.handler
    events:
      - httpApi:
          path: /signin
          method: POST
  signup:
    handler: src/functions/signup.handler
    events:
      - httpApi:
          path: /signup
          method: POST
  me:
    handler: src/functions/me.handler
    events:
      - httpApi:
          path: /me
          method: GET

  createMeal:
    handler: src/functions/createMeal.handler
    events:
      - httpApi:
          path: /meals
          method: POST

  listMeals:
    handler: src/functions/listMeals.handler
    events:
      - httpApi:
          path: /meals
          method: GET

  getMealById:
    handler: src/functions/getMealById.handler
    events:
      - httpApi:
          path: /meals/{mealId}
          method: GET

  fileUploadedEvents:
     handler: src/functions/fileUploadedEvents.handler
     events:
       - s3:
           bucket: !Ref UploadsBucket
           event: s3:ObjectCreated:*
           existing: true
           forceDeploy: true

  processMeal:
    handler: src/functions/processMeal.handler
    events:
      - sqs:
          arn: !GetAtt MealsQueue.Arn
          batchSize: 1

resources:
  Resources:
    UploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: joaosodre-foodiary-uploads
    MealsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: joaosodre-foodiary-meals-queue
        VisibilityTimeout: 60
        RedrivePolicy:
          maxReceiveCount: 1
          deadLetterTargetArn: !GetAtt MealsDLQ.Arn
    MealsDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: joaosodre-foodiary-meals-queue-dlq

